import canUseDOM from "../canUseDOM";
import UIManager from "../UIManager/index";
import useLayoutEffect from "../useLayoutEffect/index";
var DOM_LAYOUT_HANDLER_NAME = "__reactLayoutHandler", didWarn = !canUseDOM, resizeObserver = null;
function getResizeObserver() {
  return canUseDOM && typeof window.ResizeObserver < "u" ? resizeObserver == null && (resizeObserver = new window.ResizeObserver(function(entries) {
    entries.forEach(function(entry) {
      var node = entry.target, onLayout = node[DOM_LAYOUT_HANDLER_NAME];
      typeof onLayout == "function" && UIManager.measure(node, function(x, y, width, height, left, top) {
        var event = {
          // @ts-ignore
          nativeEvent: {
            layout: {
              x,
              y,
              width,
              height,
              left,
              top
            }
          },
          timeStamp: Date.now()
        };
        Object.defineProperty(event.nativeEvent, "target", {
          enumerable: !0,
          get: function() {
            return entry.target;
          }
        }), onLayout(event);
      });
    });
  })) : didWarn || process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && (console.warn("onLayout relies on ResizeObserver which is not supported by your browser. Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill."), didWarn = !0), resizeObserver;
}
function useElementLayout(ref, onLayout) {
  var observer = getResizeObserver();
  useLayoutEffect(function() {
    var node = ref.current;
    node != null && (node[DOM_LAYOUT_HANDLER_NAME] = onLayout);
  }, [
    ref,
    onLayout
  ]), useLayoutEffect(function() {
    var node = ref.current;
    return node != null && observer != null && (typeof node[DOM_LAYOUT_HANDLER_NAME] == "function" ? observer.observe(node) : observer.unobserve(node)), function() {
      node != null && observer != null && observer.unobserve(node);
    };
  }, [
    ref,
    observer
  ]);
}
export {
  useElementLayout as default
};
//# sourceMappingURL=index.js.map
