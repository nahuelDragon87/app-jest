import processColor from "..";
const platformSpecific = (x) => x;
describe("processColor", () => {
  describe("predefined color names", () => {
    it("should convert red", () => {
      const colorFromString = processColor("red");
      expect(colorFromString).toEqual(platformSpecific(4294901760));
    }), it("should convert white", () => {
      const colorFromString = processColor("white");
      expect(colorFromString).toEqual(platformSpecific(4294967295));
    }), it("should convert black", () => {
      const colorFromString = processColor("black");
      expect(colorFromString).toEqual(platformSpecific(4278190080));
    }), it("should convert transparent", () => {
      const colorFromString = processColor("transparent");
      expect(colorFromString).toEqual(platformSpecific(0));
    });
  }), describe("RGB strings", () => {
    it("should convert rgb(x, y, z)", () => {
      const colorFromString = processColor("rgb(10, 20, 30)");
      expect(colorFromString).toEqual(platformSpecific(4278850590));
    });
  }), describe("RGBA strings", () => {
    it("should convert rgba(x, y, z, a)", () => {
      const colorFromString = processColor("rgba(10, 20, 30, 0.4)");
      expect(colorFromString).toEqual(platformSpecific(1711936542));
    });
  }), describe("HSL strings", () => {
    it("should convert hsl(x, y%, z%)", () => {
      const colorFromString = processColor("hsl(318, 69%, 55%)");
      expect(colorFromString).toEqual(platformSpecific(4292558252));
    });
  }), describe("HSLA strings", () => {
    it("should convert hsla(x, y%, z%, a)", () => {
      const colorFromString = processColor("hsla(318, 69%, 55%, 0.25)");
      expect(colorFromString).toEqual(platformSpecific(1088109996));
    });
  }), describe("hex strings", () => {
    it("should convert #xxxxxx", () => {
      const colorFromString = processColor("#1e83c9");
      expect(colorFromString).toEqual(platformSpecific(4280189897));
    });
  });
});
//# sourceMappingURL=index-test.js.map
