"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var watchTamaguiConfig_exports = {};
__export(watchTamaguiConfig_exports, {
  watchTamaguiConfig: () => watchTamaguiConfig
});
module.exports = __toCommonJS(watchTamaguiConfig_exports);
var import_loadTamagui = require("./loadTamagui"), import_regenerateConfig = require("./regenerateConfig"), isWatching = !1;
async function watchTamaguiConfig(tamaguiOptions) {
  var _options_tamaguiOptions_themeBuilder;
  if (process.env.NODE_ENV === "production")
    return {
      dispose() {
      }
    };
  if (!isWatching) {
    isWatching = !0;
    var options = await (0, import_loadTamagui.getOptions)({
      tamaguiOptions
    });
    if (!options.tamaguiOptions.config)
      throw isWatching = !1, new Error("No config");
    var disposeConfigWatcher = await (0, import_loadTamagui.esbuildWatchFiles)(options.tamaguiOptions.config, async function() {
      await (0, import_loadTamagui.generateThemesAndLog)(options.tamaguiOptions), await (0, import_regenerateConfig.regenerateConfig)(options.tamaguiOptions, null, !0);
    }), themeBuilderInput = (_options_tamaguiOptions_themeBuilder = options.tamaguiOptions.themeBuilder) === null || _options_tamaguiOptions_themeBuilder === void 0 ? void 0 : _options_tamaguiOptions_themeBuilder.input, disposeThemesWatcher;
    if (themeBuilderInput) {
      var inputPath = themeBuilderInput;
      try {
        inputPath = require.resolve(themeBuilderInput);
      } catch {
      }
      disposeThemesWatcher = await (0, import_loadTamagui.esbuildWatchFiles)(inputPath, async function() {
        await (0, import_loadTamagui.generateThemesAndLog)(options.tamaguiOptions);
      });
    }
    return {
      dispose() {
        isWatching = !1, disposeConfigWatcher(), disposeThemesWatcher == null || disposeThemesWatcher();
      }
    };
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  watchTamaguiConfig
});
//# sourceMappingURL=watchTamaguiConfig.js.map
