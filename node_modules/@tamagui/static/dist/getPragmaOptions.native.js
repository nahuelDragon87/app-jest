"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var getPragmaOptions_exports = {};
__export(getPragmaOptions_exports, {
  getPragmaOptions: () => getPragmaOptions
});
module.exports = __toCommonJS(getPragmaOptions_exports);
function getPragmaOptions(param) {
  var { source, path } = param, _process_env_DEBUG, _process_env_DEBUG1, shouldPrintDebug = !1, shouldDisable = !1, firstLines = source.slice(0, 800), pragma = "", _iteratorNormalCompletion = !0, _didIteratorError = !1, _iteratorError = void 0;
  try {
    for (var _iterator = firstLines.split(`
`)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) {
      var line = _step.value, _line_match;
      if (pragma = ((_line_match = line.match(/(\/\/|\/\*)\s?\!?\s?(tamagui-ignore|debug|debug-verbose)(\n|\s|$).*/)) === null || _line_match === void 0 ? void 0 : _line_match[2].trim()) || "", pragma) {
        pragma = pragma.replace("!", "").trim();
        break;
      }
    }
  } catch (err) {
    _didIteratorError = !0, _iteratorError = err;
  } finally {
    try {
      !_iteratorNormalCompletion && _iterator.return != null && _iterator.return();
    } finally {
      if (_didIteratorError)
        throw _iteratorError;
    }
  }
  switch (pragma) {
    case "tamagui-ignore":
      shouldDisable = !0;
      break;
    case "debug":
      shouldPrintDebug = !0;
      break;
    case "debug-verbose":
      shouldPrintDebug = "verbose";
      break;
  }
  return process.env.TAMAGUI_DEBUG_FILE && path.includes(process.env.TAMAGUI_DEBUG_FILE) && (shouldPrintDebug = "verbose"), !((_process_env_DEBUG = process.env.DEBUG) === null || _process_env_DEBUG === void 0) && _process_env_DEBUG.includes("tamagui") && (shouldPrintDebug || (shouldPrintDebug = !0)), !((_process_env_DEBUG1 = process.env.DEBUG) === null || _process_env_DEBUG1 === void 0) && _process_env_DEBUG1.includes("tamagui-verbose") && (shouldPrintDebug = "verbose"), {
    shouldPrintDebug,
    shouldDisable
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getPragmaOptions
});
//# sourceMappingURL=getPragmaOptions.js.map
