"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var getTamaguiDefaultPath_exports = {};
__export(getTamaguiDefaultPath_exports, {
  getDefaultTamaguiConfigPath: () => getDefaultTamaguiConfigPath
});
module.exports = __toCommonJS(getTamaguiDefaultPath_exports);
var import_path = require("path"), import_fs_extra = require("fs-extra"), cachedPath = "";
async function getDefaultTamaguiConfigPath(param) {
  var { cwd = ".", cache = !0 } = param;
  if (cache && cachedPath)
    return cachedPath;
  var defaultPaths = [
    "tamagui.config.ts",
    (0, import_path.join)("src", "tamagui.config.ts")
  ].map(function(p) {
    return (0, import_path.join)(cwd, p);
  }), existing = (await Promise.all(defaultPaths.map(function(path) {
    return (0, import_fs_extra.pathExists)(path);
  }))).findIndex(function(x) {
    return !!x;
  }), found = defaultPaths[existing];
  if (!found)
    throw new Error("No found tamagui.config.ts");
  return cachedPath = found, found;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getDefaultTamaguiConfigPath
});
//# sourceMappingURL=getTamaguiDefaultPath.js.map
