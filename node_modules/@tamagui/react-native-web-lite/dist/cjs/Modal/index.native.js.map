{
  "version": 3,
  "sources": ["../../../src/Modal/Users/n8/tamagui/code/packages/react-native-web-lite/src/Modal/index.js"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AASA,YAAuB,2BAEvB,wBAA2B,sCAC3B,sBAAyB,oCACzB,wBAA2B,sCAC3B,qBAAwB,mCAEpBA,wBAAwB,GACxBC,mBAAmB,CAAA,GACnBC,uBAAuB,CAAC;AAE5B,SAASC,6BAAAA;AACP,MAAIF,iBAAiBG,WAAW,GAIhC;QAAIC,gBAAgBJ,iBAAiBA,iBAAiBG,SAAS,CAAA;AAC/DH,qBAAiBK,QAAQ,SAACC,SAAAA;AACxB,MAAIA,WAAWL,wBACbA,qBAAqBK,OAAAA,EAASA,YAAYF,aAAAA;IAE9C,CAAA;;AACF;AAEA,SAASG,kBAAkBD,SAAO;AAChC,EAAIA,WAAWL,yBAGbA,qBAAqBK,OAAAA,EAAS,EAAA,GAC9B,OAAOL,qBAAqBK,OAAAA;AAG9B,MAAIE,QAAQR,iBAAiBS,QAAQH,OAAAA;AAErC,EAAIE,UAAU,OACZR,iBAAiBU,OAAOF,OAAO,CAAA,GAC/BN,2BAAAA;AAEJ;AAEA,SAASS,eAAeL,SAASM,UAAQ;AACvCL,oBAAkBD,OAAAA,GAClBN,iBAAiBa,KAAKP,OAAAA,GACtBL,qBAAqBK,OAAAA,IAAWM,UAChCV,2BAAAA;AACF;AAEA,IAAIY,QAAsBC,sBAAMC,WAAW,SAACC,OAAOC,cAAAA;AACjD,MAAM,EACJC,eACAC,UACAC,WACAC,gBACAC,QACAC,aACAC,UAAU,IACV,GAAGC,KAAAA,IACDT,OAEAX,UAAUS,MAAMY,QAAQ,WAAA;WAAM5B;KAAyB,CAAA,CAAE,GAEzD6B,kBAAkBb,MAAMc,SAAS,EAAA,GACnCC,WAAWF,gBAAgB,CAAA,GAC3BG,cAAcH,gBAAgB,CAAA,GAE5BI,oBAAoBjB,MAAMkB,YAAY,WAAA;AACxC1B,sBAAkBD,OAAAA,GAEde,aACFA,UAAAA;EAEJ,GAAG;IAACf;IAASe;GAAU,GACnBa,iBAAiBnB,MAAMkB,YAAY,WAAA;AACrCtB,mBAAeL,SAASyB,WAAAA,GAEpBR,UACFA,OAAAA;EAEJ,GAAG;IAACjB;IAASiB;GAAO;AACpBR,eAAMoB,UAAU,WAAA;AACd,WAAO,WAAA;aAAM5B,kBAAkBD,OAAAA;;EACjC,GAAG;IAACA;GAAQ,GACSS,sBAAMqB,cACzBC,mBAAAA,SACA,MACctB,sBAAMqB,cAClBE,sBAAAA,SACA;IACEnB;IACAE,WAAWW;IACXT,QAAQW;IACRT;EACF,GACcV,sBAAMqB,cAClBG,sBAAAA,SACA;IACEC,QAAQV;EACV,GACcf,sBAAMqB,cAClBK,oBAAAA,SACA;IACE,GAAGf;IACHc,QAAQV;IACRR;IACAoB,KAAKxB;IACLM;EACF,GACAJ,QAAAA,CAAAA,CAAAA,CAAAA;AAKV,CAAA,GACA,gBAAeN;",
  "names": ["uniqueModalIdentifier", "activeModalStack", "activeModalListeners", "notifyActiveModalListeners", "length", "activeModalId", "forEach", "modalId", "removeActiveModal", "index", "indexOf", "splice", "addActiveModal", "listener", "push", "Modal", "React", "forwardRef", "props", "forwardedRef", "animationType", "children", "onDismiss", "onRequestClose", "onShow", "transparent", "visible", "rest", "useMemo", "_React$useState", "useState", "isActive", "setIsActive", "onDismissCallback", "useCallback", "onShowCallback", "useEffect", "createElement", "ModalPortal", "ModalAnimation", "ModalFocusTrap", "active", "ModalContent", "ref"]
}
