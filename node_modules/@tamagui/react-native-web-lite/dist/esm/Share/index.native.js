import { invariant } from "@tamagui/react-native-web-internals";
function _class_call_check(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _create_class(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
}
var Share = /* @__PURE__ */ function() {
  "use strict";
  function Share2() {
    _class_call_check(this, Share2);
  }
  return _create_class(Share2, null, [
    {
      key: "share",
      value: function(content) {
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        return invariant(typeof content == "object" && content !== null, "Content to share must be a valid object"), invariant(typeof content.url == "string" || typeof content.message == "string", "At least one of URL and message is required"), invariant(typeof options == "object" && options !== null, "Options must be a valid object"), invariant(!content.title || typeof content.title == "string", "Invalid title: title should be a string."), window.navigator.share !== void 0 ? window.navigator.share({
          title: content.title,
          text: content.message,
          url: content.url
        }) : Promise.reject(new Error("Share is not supported in this browser"));
      }
    },
    {
      key: "sharedAction",
      get: (
        /**
        * The content was successfully shared.
        */
        function() {
          return "sharedAction";
        }
      )
    },
    {
      key: "dismissedAction",
      get: (
        /**
        * The dialog has been dismissed.
        * @platform ios
        */
        function() {
          return "dismissedAction";
        }
      )
    }
  ]), Share2;
}(), Share_default = Share;
export {
  Share_default as default
};
//# sourceMappingURL=index.js.map
