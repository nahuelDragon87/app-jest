function _class_call_check(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _create_class(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
}
var _EventSubscription = /* @__PURE__ */ function() {
  function _EventSubscription2(subscriber) {
    _class_call_check(this, _EventSubscription2), this.subscriber = subscriber;
  }
  return _create_class(_EventSubscription2, [
    {
      /**
      * Removes this subscription from the subscriber that controls it.
      */
      key: "remove",
      value: function() {
        this.subscriber.removeSubscription(this);
      }
    }
  ]), _EventSubscription2;
}(), EventSubscription_default = _EventSubscription;
export {
  EventSubscription_default as default
};
//# sourceMappingURL=_EventSubscription.js.map
