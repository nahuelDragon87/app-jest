"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionLogger = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_native_1 = require("react-native");
const Inspect_1 = __importDefault(require("./Inspect"));
const ActionLogger = ({ actions, onClear }) => ((0, jsx_runtime_1.jsxs)(react_native_1.ScrollView, { contentContainerStyle: { padding: 10 }, children: [(0, jsx_runtime_1.jsx)(react_native_1.ScrollView, { horizontal: true, children: (0, jsx_runtime_1.jsx)(react_native_1.View, { children: actions.map((action) => ((0, jsx_runtime_1.jsxs)(react_native_1.View, { style: styles.row, children: [(0, jsx_runtime_1.jsx)(react_native_1.View, { children: action.count > 1 ? (0, jsx_runtime_1.jsx)(react_native_1.Text, { children: action.count }) : null }), (0, jsx_runtime_1.jsx)(react_native_1.View, { style: styles.grow, children: (0, jsx_runtime_1.jsx)(Inspect_1.default, { name: action.data.name, value: action.data.args || action.data }) })] }, action.id))) }) }), (0, jsx_runtime_1.jsx)(react_native_1.View, { children: (0, jsx_runtime_1.jsx)(react_native_1.Button, { onPress: onClear, title: "CLEAR" }) })] }));
exports.ActionLogger = ActionLogger;
exports.default = exports.ActionLogger;
const styles = react_native_1.StyleSheet.create({
    grow: { flexGrow: 1 },
    row: { flexDirection: 'row' },
});
